General Purpose Registers:

1.accumulator -> i/p and o/p reg operations : a,ax,eax,rax.
2.base -> holds address of data : b,bx,ebx,rbx.
3.counter -> counts,used in loop : cx,eax,rcx.
4.data -> hold output data : d,dx,edx,rdx.

X  = extended to 16 bits
E = extended to 32 bits
R = Rich reg to 64 bits

5.Code Segment-> holds the address of code segment.
6.Data Segment-> holds the address of data segment.
7.Stack Segment-> holds the address of stack segment.
8.Extra Segment-> holds address of the data segment

9.Source Index-> points the source operand 
10.Destination Index-> points the destination operand 

11.Instrction Pointer-> holds the stack pointer 
12.Stack Poiner->points the top of stack 

13.flag Register->holds current status of the program

14.Base Pointer->Base of the top of stack

-------------------------

Addresssing Modes:

1.Register addressing:

mov reg1,reg2;

2.Immediate addressing:

mov reg1,23;
mov reg2,'A';
 
3.Memory addressing:

mov reg3[address];
------------------------


Data Transfer Function:

mov dl,2;  or mov dl,'A';
mov ah,2; <----- service routine 

## to give input "1 = input character with echo"
## 2 = output /print a single character 'a'
## 3 = input a character without echo
## 9 = print collection of character 'abcd'
## 4ch = Exit

------------------------

Interrupt 

stop the current program and allow microprocessor to access hardware to take input or give output

## to print
mov ah,2;
INT 21H;

## to take input
mov ah,1;
INT 21H;
------------------------

ASCII code 


______________________


DOSBOX commands::

Edit Filename.asm
MASM Filename.asm 
LINK Filename.obj
Filename.exe






